version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: starqi-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-starqi_root_pass}
      MYSQL_DATABASE: ${DB_DATABASE:-starqi}
      MYSQL_USER: ${DB_USERNAME:-starqi_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-starqi_pass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - starqi-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: starqi-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: db
      DB_PORT: 3306
      DB_USERNAME: ${DB_USERNAME:-starqi_user}
      DB_PASSWORD: ${DB_PASSWORD:-starqi_pass}
      DB_DATABASE: ${DB_DATABASE:-starqi}
      JWT_SECRET: ${JWT_SECRET:-change_this_jwt_secret_in_production}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
      UPLOAD_DIR: /app/uploads
      BASE_URL: ${BASE_URL:-http://localhost:5000}
    volumes:
      - uploads_data:/app/uploads
      - ./server:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - starqi-network
    command: npm run dev

  # Frontend React App
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: starqi-client
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:5000/api}
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - starqi-network
    command: npm run dev

volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local

networks:
  starqi-network:
    driver: bridge
